 

Here is the UML-class diagram:
```plantuml
@startuml
class ReadTimeCalculator {
  - content: str
  - wpm: int
  + __init__(content: str, wpm: int = 265)
  + calculate_reading_time(): float
  + parse_content(): str
}

class TextProcessor {
  - content: str
  + __init__(content: str)
  + process_text(): str
}

class HTMLProcessor {
  - content: str
  + __init__(content: str)
  + process_html(): str
}

class MarkdownProcessor {
  - content: str
  + __init__(content: str)
  + process_markdown(): str
}

ReadTimeCalculator --* TextProcessor
ReadTimeCalculator --* HTMLProcessor
ReadTimeCalculator --* MarkdownProcessor
@enduml
```

Here is the UML-sequence diagram:
```plantuml
@startuml
participant ReadTimeCalculator as "ReadTimeCalculator"
participant TextProcessor as "TextProcessor"
participant HTMLProcessor as "HTMLProcessor"
participant MarkdownProcessor as "MarkdownProcessor"

ReadTimeCalculator->>TextProcessor: process_text()
TextProcessor->>ReadTimeCalculator: return processed text

ReadTimeCalculator->>HTMLProcessor: process_html()
HTMLProcessor->>ReadTimeCalculator: return processed html

ReadTimeCalculator->>MarkdownProcessor: process_markdown()
MarkdownProcessor->>ReadTimeCalculator: return processed markdown

ReadTimeCalculator->>ReadTimeCalculator: calculate_reading_time()
@enduml
```

Here is the requirements.txt file:
```
beautifulsoup4
lxml
markdown2
pytest
pyquery
```

Here is the file tree with a textual description of the files and directories:
```
ReadTime/
|---- __init__.py
|---- read_time_calculator.py
|---- text_processor.py
|---- html_processor.py
|---- markdown_processor.py
|---- examples/
|       |---- demo.py
|---- samples/
|       |---- html.html
|       |---- markdown.md
|       |---- plain_text.txt
|---- tests/
|       |---- test_read_time_calculator.py
|       |---- test_text_processor.py
|       |---- test_html_processor.py
|       |---- test_markdown_processor.py
|---- requirements.txt
```

Here is a textual description of the files and directories:

* `__init__.py`: An empty file that indicates the `ReadTime` directory is a Python package.
* `read_time_calculator.py`: This file contains the `ReadTimeCalculator` class, which is responsible for estimating the reading time for different formats of content.
* `text_processor.py`, `html_processor.py`, `markdown_processor.py`: These files contain the `TextProcessor`, `HTMLProcessor`, and `MarkdownProcessor` classes, respectively. These classes are responsible for processing the content in different formats.
* `examples/demo.py`: This file contains an example script that demonstrates how to use the `ReadTimeCalculator` class to estimate the reading time for different formats of content.
* `samples/`: This directory contains sample files in different formats (HTML, markdown, and plain text) that are used for testing and validation.
* `tests/`: This directory contains test files for the `ReadTimeCalculator` and processor classes.
* `requirements.txt`: This file lists the dependencies required to run the project. 

Note: The above file tree and textual description are based on the provided specifications and may need to be adjusted based on the actual implementation.